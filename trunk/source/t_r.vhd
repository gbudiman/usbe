-- VHDL Entity My_Lib.T_R.symbol
--
-- Created:
--          by - mg28.bin (srge04.ecn.purdue.edu)
--          at - 20:09:41 12/04/10
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2009.2 (Build 10)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY T_R IS
   PORT( 
      PRGA_OUT     : IN     std_logic_vector (7 DOWNTO 0);
      clk          : IN     std_logic;
      p_ready      : IN     std_logic;
      prga_opcode  : IN     std_logic_vector (1 DOWNTO 0);
      rst          : IN     std_logic;
      CRC_ERROR    : OUT    std_logic;
      EOP_EXTERNAL : OUT    std_logic;
      NEXT_BYTE    : OUT    std_logic;
      OPCODE       : OUT    std_logic_vector (1 DOWNTO 0);
      RCV_DATA     : OUT    std_logic_vector (7 DOWNTO 0);
      R_ERROR      : OUT    std_logic;
      SENDING      : OUT    std_logic;
      W_ENABLE     : OUT    std_logic
   );

-- Declarations

END T_R ;

--
-- VHDL Architecture My_Lib.T_R.struct
--
-- Created:
--          by - mg28.bin (srge04.ecn.purdue.edu)
--          at - 20:09:41 12/04/10
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2009.2 (Build 10)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

--LIBRARY My_Lib;

ARCHITECTURE struct OF T_R IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL dm_tx_out : std_logic;
   SIGNAL dp_tx_out : std_logic;


   -- Component Declarations
   COMPONENT Receiver_Block
   PORT (
      CLK          : IN     std_logic;
      DM1_RX       : IN     std_logic;
      DP1_RX       : IN     std_logic;
      RST          : IN     std_logic;
      CRC_ERROR    : OUT    std_logic;
      EOP_EXTERNAL : OUT    std_logic;
      OPCODE       : OUT    std_logic_vector (1 DOWNTO 0);
      RCV_DATA     : OUT    std_logic_vector (7 DOWNTO 0);
      R_ERROR      : OUT    std_logic;
      W_ENABLE     : OUT    std_logic
   );
   END COMPONENT;
   COMPONENT transmitter_block
   PORT (
      PRGA_OUT    : IN     std_logic_vector (7 DOWNTO 0);
      clk         : IN     std_logic;
      p_ready     : IN     std_logic;
      prga_opcode : IN     std_logic_vector (1 DOWNTO 0);
      rst         : IN     std_logic;
      NEXT_BYTE   : OUT    std_logic;
      SENDING     : OUT    std_logic;
      dm_tx_out   : OUT    std_logic;
      dp_tx_out   : OUT    std_logic
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   --FOR ALL : Receiver_Block USE ENTITY My_Lib.Receiver_Block;
   --FOR ALL : transmitter_block USE ENTITY My_Lib.transmitter_block;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   U_1 : Receiver_Block
      PORT MAP (
         CLK          => clk,
         DM1_RX       => dm_tx_out,
         DP1_RX       => dp_tx_out,
         RST          => rst,
         EOP_EXTERNAL => EOP_EXTERNAL,
         CRC_ERROR    => CRC_ERROR,
         OPCODE       => OPCODE,
         RCV_DATA     => RCV_DATA,
         R_ERROR      => R_ERROR,
         W_ENABLE     => W_ENABLE
      );
   U_0 : transmitter_block
      PORT MAP (
         PRGA_OUT    => PRGA_OUT,
         clk         => clk,
         p_ready     => p_ready,
         prga_opcode => prga_opcode,
         rst         => rst,
         SENDING     => SENDING,
         dm_tx_out   => dm_tx_out,
         dp_tx_out   => dp_tx_out,
         NEXT_BYTE   => NEXT_BYTE
      );

END struct;
