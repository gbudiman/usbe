-- VHDL Entity My_Lib.rmedt_square.symbol
--
-- Created:
--          by - mg28.bin (srge09.ecn.purdue.edu)
--          at - 16:31:45 12/06/10
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2009.2 (Build 10)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY rmedt_square IS
   PORT( 
      CLK              : IN     std_logic;
      DMRH             : IN     std_logic;
      DMRS             : IN     std_logic;
      DPRH             : IN     std_logic;
      DPRS             : IN     std_logic;
      RST              : IN     std_logic;
      SERIAL_IN        : IN     std_logic;
      DATA_IN_H, DATA_IN_S: IN  STD_LOGIC_VECTOR(7 DOWNTO 0);
      BSE_H            : OUT    std_logic;
      BSE_S            : OUT    std_logic;
      CRCE_H           : OUT    std_logic;
      CRCE_S           : OUT    std_logic;
      DMTH             : OUT    std_logic;
      DMTS             : OUT    std_logic;
      DPTH             : OUT    std_logic;
      DPTS             : OUT    std_logic;
      EMPTY_H          : OUT    STD_LOGIC;
      EMPTY_S          : OUT    STD_LOGIC;
      FULL_H           : OUT    STD_LOGIC;
      FULL_S           : OUT    STD_LOGIC;
      RE_H             : OUT    std_logic;
      RE_S             : OUT    std_logic;
      c_key_error      : OUT    std_logic;
      c_parity_error   : OUT    std_logic;
      c_prog_error     : OUT    std_logic;
      host_is_sending  : OUT    std_logic;
      slave_is_sending : OUT    std_logic;
      W_ENABLE_H, W_ENABLE_S: OUT STD_LOGIC;
      R_ENABLE_H, R_ENABLE_S: OUT STD_LOGIC;
      DATA_H, DATA_S, ADDR_H, ADDR_S: OUT STD_LOGIC_VECTOR(7 DOWNTO 0)
   );

-- Declarations

END rmedt_square ;

--
-- VHDL Architecture My_Lib.rmedt_square.struct
--
-- Created:
--          by - mg28.bin (srge09.ecn.purdue.edu)
--          at - 16:31:45 12/06/10
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2009.2 (Build 10)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

--LIBRARY My_Lib;

ARCHITECTURE struct OF rmedt_square IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL KEY_ERROR     : std_logic;
   SIGNAL KEY_ERROR1    : std_logic;
   SIGNAL PARITY_ERROR  : std_logic;
   SIGNAL PARITY_ERROR1 : std_logic;
   SIGNAL PROG_ERROR    : std_logic;
   SIGNAL PROG_ERROR1   : std_logic;


   -- Component Declarations
   COMPONENT rmedt_rewire
   PORT (
      CLK          : IN     std_logic ;
      DM1_RX       : IN     std_logic ;
      DP1_RX       : IN     std_logic ;
      RST          : IN     std_logic ;
      SERIAL_IN    : IN     std_logic ;
      DATA_IN      : IN     STD_LOGIC_VECTOR(7 DOWNTO 0);
      BS_ERROR     : OUT    std_logic ;
      CRC_ERROR    : OUT    std_logic ;
      EMPTY        : OUT    STD_LOGIC ;
      FULL         : OUT    STD_LOGIC ;
      KEY_ERROR    : OUT    std_logic ;
      PARITY_ERROR : OUT    std_logic ;
      PROG_ERROR   : OUT    std_logic ;
      RBUF_FULL    : OUT    std_logic ;
      R_ERROR      : OUT    std_logic ;
      SENDING      : OUT    std_logic ;
      dm_tx_out    : OUT    std_logic ;
      dp_tx_out    : OUT    std_logic ;
      W_ENABLE_R, R_ENABLE: OUT std_logic;
      DATA, ADDR   : OUT    STD_LOGIC_VECTOR(7 DOWNTO 0)
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   --FOR ALL : RMEDT_REWIRE USE ENTITY My_Lib.RMEDT_REWIRE;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.9) for instance 'U_2' of 'or'
   c_key_error <= KEY_ERROR OR KEY_ERROR1;

   -- ModuleWare code(v1.9) for instance 'U_3' of 'or'
   c_parity_error <= PARITY_ERROR OR PARITY_ERROR1;

   -- ModuleWare code(v1.9) for instance 'U_4' of 'or'
   c_prog_error <= PROG_ERROR OR PROG_ERROR1;

   -- Instance port mappings.
   U_0 : rmedt_rewire
      PORT MAP (
         CLK          => CLK,
         DM1_RX       => DMRH,
         DP1_RX       => DPRH,
         RST          => RST,
         SERIAL_IN    => SERIAL_IN,
         DATA_IN      => DATA_IN_H,
         BS_ERROR     => BSE_H,
         CRC_ERROR    => CRCE_H,
         EMPTY        => EMPTY_H,
         FULL         => FULL_H,
         KEY_ERROR    => KEY_ERROR,
         PARITY_ERROR => PARITY_ERROR,
         PROG_ERROR   => PROG_ERROR,
         RBUF_FULL    => OPEN,
         R_ERROR      => RE_H,
         SENDING      => host_is_sending,
         dm_tx_out    => DMTS,
         dp_tx_out    => DPTS,
         W_ENABLE_R   => W_ENABLE_H,
         R_ENABLE     => R_ENABLE_H,
         DATA         => DATA_H,
         ADDR         => ADDR_H
      );
   U_1 : rmedt_rewire
      PORT MAP (
         CLK          => CLK,
         DM1_RX       => DMRS,
         DP1_RX       => DPRS,
         RST          => RST,
         SERIAL_IN    => SERIAL_IN,
         DATA_IN      => DATA_IN_S,
         BS_ERROR     => BSE_S,
         CRC_ERROR    => CRCE_S,
         EMPTY        => EMPTY_S,
         FULL         => FULL_S,
         KEY_ERROR    => KEY_ERROR1,
         PARITY_ERROR => PARITY_ERROR1,
         PROG_ERROR   => PROG_ERROR1,
         RBUF_FULL    => OPEN,
         R_ERROR      => RE_S,
         SENDING      => slave_is_sending,
         dm_tx_out    => DMTH,
         dp_tx_out    => DPTH,
         W_ENABLE_R   => W_ENABLE_S,
         R_ENABLE     => R_ENABLE_S,
         DATA         => DATA_S,
         ADDR         => ADDR_S
      );

END struct;
