-- VHDL Entity My_Lib.rmedt_rmedt.symbol
--
-- Created:
--          by - mg28.bin (srge00.ecn.purdue.edu)
--          at - 02:29:33 12/07/10
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2009.2 (Build 10)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY rmedt_rmedt IS
   PORT( 
      CLK            : IN     std_logic;
      DM1_RX         : IN     std_logic;
      DP1_RX         : IN     std_logic;
      RST            : IN     std_logic;
      SERIAL_IN      : IN     std_logic;
      BS_ERROR       : OUT    std_logic;
      BS_ERROR1      : OUT    std_logic;
      CRC_ERROR      : OUT    std_logic;
      CRC_ERROR1     : OUT    std_logic;
      EMPTY          : OUT    STD_LOGIC;
      EMPTY1         : OUT    STD_LOGIC;
      FULL           : OUT    STD_LOGIC;
      FULL1          : OUT    STD_LOGIC;
      R_ERROR        : OUT    std_logic;
      R_ERROR1       : OUT    std_logic;
      SENDING        : OUT    std_logic;
      SENDING1       : OUT    std_logic;
      c_key_error    : OUT    std_logic;
      c_parity_error : OUT    std_logic;
      c_prog_error   : OUT    std_logic;
      dm_tx_out1     : OUT    std_logic;
      dp_tx_out1     : OUT    std_logic
   );

-- Declarations

END rmedt_rmedt ;

--
-- VHDL Architecture My_Lib.rmedt_rmedt.struct
--
-- Created:
--          by - mg28.bin (srge00.ecn.purdue.edu)
--          at - 02:29:33 12/07/10
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2009.2 (Build 10)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

--LIBRARY My_Lib;

ARCHITECTURE struct OF rmedt_rmedt IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL KEY_ERROR     : std_logic;
   SIGNAL KEY_ERROR1    : std_logic;
   SIGNAL PARITY_ERROR  : std_logic;
   SIGNAL PARITY_ERROR1 : std_logic;
   SIGNAL PROG_ERROR    : std_logic;
   SIGNAL PROG_ERROR1   : std_logic;
   SIGNAL dm_tx_out     : std_logic;
   SIGNAL dp_tx_out     : std_logic;


   -- Component Declarations
   COMPONENT rmedt_rewire
   PORT (
      CLK          : IN     std_logic ;
      DM1_RX       : IN     std_logic ;
      DP1_RX       : IN     std_logic ;
      RST          : IN     std_logic ;
      SERIAL_IN    : IN     std_logic ;
      BS_ERROR     : OUT    std_logic ;
      CRC_ERROR    : OUT    std_logic ;
      EMPTY        : OUT    STD_LOGIC ;
      FULL         : OUT    STD_LOGIC ;
      KEY_ERROR    : OUT    std_logic ;
      PARITY_ERROR : OUT    std_logic ;
      PROG_ERROR   : OUT    std_logic ;
      RBUF_FULL    : OUT    std_logic ;
      R_ERROR      : OUT    std_logic ;
      SENDING      : OUT    std_logic ;
      dm_tx_out    : OUT    std_logic ;
      dp_tx_out    : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   --FOR ALL : RMEDT_REWIRE USE ENTITY My_Lib.RMEDT_REWIRE;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.9) for instance 'U_2' of 'or'
   c_key_error <= KEY_ERROR OR KEY_ERROR1;

   -- ModuleWare code(v1.9) for instance 'U_3' of 'or'
   c_parity_error <= PARITY_ERROR OR PARITY_ERROR1;

   -- ModuleWare code(v1.9) for instance 'U_4' of 'or'
   c_prog_error <= PROG_ERROR OR PROG_ERROR1;

   -- Instance port mappings.
   U_0 : rmedt_rewire
      PORT MAP (
         CLK          => CLK,
         DM1_RX       => dm_tx_out,
         DP1_RX       => dp_tx_out,
         RST          => RST,
         SERIAL_IN    => SERIAL_IN,
         BS_ERROR     => BS_ERROR,
         CRC_ERROR    => CRC_ERROR1,
         EMPTY        => EMPTY1,
         FULL         => FULL1,
         KEY_ERROR    => KEY_ERROR1,
         PARITY_ERROR => PARITY_ERROR1,
         PROG_ERROR   => PROG_ERROR1,
         RBUF_FULL    => OPEN,
         R_ERROR      => R_ERROR1,
         SENDING      => SENDING1,
         dm_tx_out    => dm_tx_out1,
         dp_tx_out    => dp_tx_out1
      );
   U_1 : rmedt_rewire
      PORT MAP (
         CLK          => CLK,
         DM1_RX       => DM1_RX,
         DP1_RX       => DP1_RX,
         RST          => RST,
         SERIAL_IN    => SERIAL_IN,
         BS_ERROR     => BS_ERROR1,
         CRC_ERROR    => CRC_ERROR,
         EMPTY        => EMPTY,
         FULL         => FULL,
         KEY_ERROR    => KEY_ERROR,
         PARITY_ERROR => PARITY_ERROR,
         PROG_ERROR   => PROG_ERROR,
         RBUF_FULL    => OPEN,
         R_ERROR      => R_ERROR,
         SENDING      => SENDING,
         dm_tx_out    => dm_tx_out,
         dp_tx_out    => dp_tx_out
      );

END struct;
