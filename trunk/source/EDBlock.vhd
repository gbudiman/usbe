-- VHDL Entity My_Lib.EDBlock.symbol
--
-- Created:
--          by - mg28.bin (srge04.ecn.purdue.edu)
--          at - 17:26:18 11/27/10
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2009.2 (Build 10)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY EDBlock IS
   PORT( 
      BYTE           : IN     STD_LOGIC_VECTOR (7 DOWNTO 0);
      BYTE_READY     : IN     STD_LOGIC;
      CLK            : IN     std_logic;
      OPCODE         : IN     STD_LOGIC_VECTOR (1 DOWNTO 0);
      RST            : IN     std_logic;
      SERIAL_IN      : IN     std_logic;
      DATA_IN        : IN     std_logic_VECTOR (7 DOWNTO 0);
      KEY_ERROR      : OUT    std_logic;
      PARITY_ERROR   : OUT    std_logic;
      PDATA_READY    : OUT    STD_LOGIC;
      PROCESSED_DATA : OUT    STD_LOGIC_VECTOR (7 DOWNTO 0);
      PROG_ERROR     : OUT    std_logic;
      RBUF_FULL      : OUT    std_logic;
      W_ENABLE, R_ENABLE: OUT std_logic;
      DATA, ADDR     : OUT    STD_LOGIC_VECTOR(7 DOWNTO 0)
   );

-- Declarations

END EDBlock ;

--
-- VHDL Architecture My_Lib.EDBlock.struct
--
-- Created:
--          by - mg28.bin (srge04.ecn.purdue.edu)
--          at - 17:26:18 11/27/10
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2009.2 (Build 10)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;
USE IEEE.std_logic_unsigned.all;
USE IEEE.numeric_std.all;

--LIBRARY My_Lib;

ARCHITECTURE struct OF EDBlock IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL PLAINKEY : std_logic_vector(63 DOWNTO 0);

   -- Implicit buffer signal declarations
   SIGNAL KEY_ERROR_internal : std_logic;


   -- Component Declarations
   COMPONENT KSA
   PORT (
      BYTE           : IN     STD_LOGIC_VECTOR (7 DOWNTO 0);
      BYTE_READY     : IN     STD_LOGIC;
      CLK            : IN     STD_LOGIC;
      KEY            : IN     STD_LOGIC_VECTOR (63 DOWNTO 0);
      KEY_ERROR      : IN     STD_LOGIC;
      OPCODE         : IN     STD_LOGIC_VECTOR (1 DOWNTO 0);
      RST            : IN     STD_LOGIC;
      DATA_IN        : IN     STD_LOGIC_VECTOR (7 DOWNTO 0);
      PDATA_READY    : OUT    STD_LOGIC;
      PROCESSED_DATA : OUT    STD_LOGIC_VECTOR (7 DOWNTO 0);
      W_ENABLE, R_ENABLE: OUT STD_LOGIC;
      ADDR, DATA     : OUT    STD_LOGIC_VECTOR (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT uart_rcv_block
   PORT (
      CLK        : IN     std_logic;
      RST        : IN     std_logic;
      SERIAL_IN  : IN     std_logic;
      KEY_ERROR  : OUT    std_logic;
      PLAINKEY   : OUT    std_logic_vector (63 DOWNTO 0);
      PROG_ERROR : OUT    std_logic;
      PARITY_ERROR: OUT   std_logic;
      RBUF_FULL  : OUT    std_logic
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   --FOR ALL : KSA USE ENTITY My_Lib.KSA;
   --FOR ALL : uart_rcv_block USE ENTITY My_Lib.uart_rcv_block;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   U_0 : KSA
      PORT MAP (
         KEY            => PLAINKEY,
         CLK            => CLK,
         RST            => RST,
         KEY_ERROR      => KEY_ERROR_internal,
         BYTE_READY     => BYTE_READY,
         BYTE           => BYTE,
         DATA_IN        => DATA_IN,
         OPCODE         => OPCODE,
         PROCESSED_DATA => PROCESSED_DATA,
         PDATA_READY    => PDATA_READY,
         W_ENABLE       => W_ENABLE,
         R_ENABLE       => R_ENABLE,
         ADDR           => ADDR,
         DATA           => DATA
      );
   U_1 : uart_rcv_block
      PORT MAP (
         CLK        => CLK,
         RST        => RST,
         SERIAL_IN  => SERIAL_IN,
         KEY_ERROR  => KEY_ERROR_internal,
         PROG_ERROR => PROG_ERROR,
         PARITY_ERROR => PARITY_ERROR,
         PLAINKEY   => PLAINKEY,
         RBUF_FULL  => RBUF_FULL
      );

   -- Implicit buffered output assignments
   KEY_ERROR <= KEY_ERROR_internal;

END struct;
