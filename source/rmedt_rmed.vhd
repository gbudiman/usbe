-- VHDL Entity My_Lib.rmedt_rmed.symbol
--
-- Created:
--          by - mg28.bin (srge04.ecn.purdue.edu)
--          at - 14:22:52 12/04/10
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2009.2 (Build 10)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY rmedt_rmed IS
   PORT( 
      CLK            : IN     std_logic;
      DM1_RX         : IN     std_logic;
      DP1_RX         : IN     std_logic;
      NEXT_BYTE      : IN     STD_LOGIC;
      RST            : IN     std_logic;
      SERIAL_IN      : IN     std_logic;
      EMPTY          : OUT    STD_LOGIC;
      EMPTY1         : OUT    STD_LOGIC;
      FULL           : OUT    STD_LOGIC;
      FULL1          : OUT    STD_LOGIC;
      PDATA_READY    : OUT    STD_LOGIC;
      PRGA_OPCODE    : OUT    STD_LOGIC_VECTOR (1 DOWNTO 0);
      PROCESSED_DATA : OUT    STD_LOGIC_VECTOR (7 DOWNTO 0);
      dout           : OUT    std_logic;
      dout1          : OUT    std_logic;
      dout2          : OUT    std_logic;
      dout3          : OUT    std_logic;
      dout4          : OUT    std_logic
   );

-- Declarations

END rmedt_rmed ;

--
-- VHDL Architecture My_Lib.rmedt_rmed.struct
--
-- Created:
--          by - mg28.bin (srge04.ecn.purdue.edu)
--          at - 14:22:52 12/04/10
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2009.2 (Build 10)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

--LIBRARY My_Lib;

ARCHITECTURE struct OF rmedt_rmed IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL CRC_ERROR   : std_logic;
   SIGNAL CRC_ERROR1  : std_logic;
   SIGNAL KEY_ERROR   : std_logic;
   SIGNAL KEY_ERROR1  : std_logic;
   SIGNAL PROG_ERROR  : std_logic;
   SIGNAL PROG_ERROR1 : std_logic;
   SIGNAL RBUF_FULL   : std_logic;
   SIGNAL RBUF_FULL1  : std_logic;
   SIGNAL R_ERROR     : std_logic;
   SIGNAL R_ERROR1    : std_logic;
   SIGNAL dm_tx_out   : std_logic;
   SIGNAL dp_tx_out   : std_logic;
   SIGNAL sending     : std_logic;

   -- Component Declarations
   COMPONENT rmed
   PORT (
      CLK            : IN     std_logic ;
      DM1_RX         : IN     std_logic ;
      DP1_RX         : IN     std_logic ;
      NEXT_BYTE      : IN     STD_LOGIC ;
      RST            : IN     std_logic ;
      SERIAL_IN      : IN     std_logic ;
      CRC_ERROR      : OUT    std_logic ;
      EMPTY          : OUT    STD_LOGIC ;
      FULL           : OUT    STD_LOGIC ;
      KEY_ERROR      : OUT    std_logic ;
      PDATA_READY    : OUT    STD_LOGIC ;
      PRGA_OPCODE    : OUT    STD_LOGIC_VECTOR (1 DOWNTO 0);
      PROCESSED_DATA : OUT    STD_LOGIC_VECTOR (7 DOWNTO 0);
      PROG_ERROR     : OUT    std_logic ;
      RBUF_FULL      : OUT    std_logic ;
      R_ERROR        : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT rmedt
   PORT (
      CLK        : IN     std_logic ;
      DM1_RX     : IN     std_logic ;
      DP1_RX     : IN     std_logic ;
      RST        : IN     std_logic ;
      SERIAL_IN  : IN     std_logic ;
      CRC_ERROR  : OUT    std_logic ;
      EMPTY      : OUT    STD_LOGIC ;
      FULL       : OUT    STD_LOGIC ;
      KEY_ERROR  : OUT    std_logic ;
      PROG_ERROR : OUT    std_logic ;
      RBUF_FULL  : OUT    std_logic ;
      R_ERROR    : OUT    std_logic ;
      SENDING    : OUT    std_logic ;
      dm_tx_out  : OUT    std_logic ;
      dp_tx_out  : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   --FOR ALL : RMED USE ENTITY My_Lib.RMED;
   --FOR ALL : RMEDT USE ENTITY My_Lib.RMEDT;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.9) for instance 'U_2' of 'sor'
   dout <= CRC_ERROR OR CRC_ERROR1;

   -- ModuleWare code(v1.9) for instance 'U_3' of 'sor'
   dout1 <= R_ERROR OR R_ERROR1;

   -- ModuleWare code(v1.9) for instance 'U_4' of 'sor'
   dout2 <= KEY_ERROR OR KEY_ERROR1;

   -- ModuleWare code(v1.9) for instance 'U_5' of 'sor'
   dout3 <= PROG_ERROR OR PROG_ERROR1;

   -- ModuleWare code(v1.9) for instance 'U_6' of 'sor'
   dout4 <= RBUF_FULL OR RBUF_FULL1;

   -- Instance port mappings.
   U_1 : rmed
      PORT MAP (
         CLK            => CLK,
         DM1_RX         => dm_tx_out,
         DP1_RX         => dp_tx_out,
         NEXT_BYTE      => NEXT_BYTE,
         RST            => RST,
         SERIAL_IN      => SERIAL_IN,
         CRC_ERROR      => CRC_ERROR1,
         EMPTY          => EMPTY1,
         FULL           => FULL1,
         KEY_ERROR      => KEY_ERROR1,
         PDATA_READY    => PDATA_READY,
         PRGA_OPCODE    => PRGA_OPCODE,
         PROCESSED_DATA => PROCESSED_DATA,
         PROG_ERROR     => PROG_ERROR1,
         RBUF_FULL      => RBUF_FULL1,
         R_ERROR        => R_ERROR1
      );
   U_0 : rmedt
      PORT MAP (
         CLK        => CLK,
         DM1_RX     => DM1_RX,
         DP1_RX     => DP1_RX,
         RST        => RST,
         SERIAL_IN  => SERIAL_IN,
         CRC_ERROR  => CRC_ERROR,
         EMPTY      => EMPTY,
         FULL       => FULL,
         KEY_ERROR  => KEY_ERROR,
         PROG_ERROR => PROG_ERROR,
         RBUF_FULL  => RBUF_FULL,
         R_ERROR    => R_ERROR,
         SENDING    => SENDING,
         dm_tx_out  => dm_tx_out,
         dp_tx_out  => dp_tx_out
      );

END struct;
